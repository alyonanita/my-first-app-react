[{"C:\\Users\\alyon\\react-app\\src\\index.js":"1","C:\\Users\\alyon\\react-app\\src\\reportWebVitals.js":"2","C:\\Users\\alyon\\react-app\\src\\App.js":"3","C:\\Users\\alyon\\react-app\\src\\Metod\\MetodList.js":"4","C:\\Users\\alyon\\react-app\\src\\Metod\\MetodItem.js":"5","C:\\Users\\alyon\\react-app\\src\\context.js":"6","C:\\Users\\alyon\\react-app\\src\\Iconadd.js":"7","C:\\Users\\alyon\\react-app\\src\\Metod\\MetodItemIcon.js":"8","C:\\Users\\alyon\\react-app\\src\\MySwitcher.js":"9","C:\\Users\\alyon\\react-app\\src\\input.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1369,"mtime":1611743337737,"results":"14","hashOfConfig":"12"},{"size":2222,"mtime":1611748044930,"results":"15","hashOfConfig":"12"},{"size":1271,"mtime":1611740916084,"results":"16","hashOfConfig":"12"},{"size":92,"mtime":1611718074424,"results":"17","hashOfConfig":"12"},{"size":958,"mtime":1611734196738,"results":"18","hashOfConfig":"12"},{"size":2360,"mtime":1611734061746,"results":"19","hashOfConfig":"12"},{"size":668,"mtime":1611748079753,"results":"20","hashOfConfig":"12"},{"size":194,"mtime":1611746204941,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"iyz86f",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alyon\\react-app\\src\\index.js",[],"C:\\Users\\alyon\\react-app\\src\\reportWebVitals.js",[],"C:\\Users\\alyon\\react-app\\src\\App.js",[],"C:\\Users\\alyon\\react-app\\src\\Metod\\MetodList.js",["45","46"],"C:\\Users\\alyon\\react-app\\src\\Metod\\MetodItem.js",["47","48"],"import React, {useContext,useState} from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport Context from \"../context\";\r\n// import Iconadd from \"../Iconadd\"\r\n\r\n\r\n\r\n\r\nfunction MetodItem({ metod, index, onChange }) {\r\n// const [showIcon, setIconDisabled] = useState(false);\r\n\r\nconst styles = {\r\n    input: {\r\n        marginRight: '1rem'\r\n    }\r\n}\r\n\r\n \r\n     const {removeTodo} = useContext(Context)\r\n     const classes = []\r\n\r\n     if (metod.completed) {\r\n         classes.push('done')\r\n     }\r\n     if (metod.addinput===\"MROT\") {\r\n        // setIconDisabled(true)\r\n        }\r\n         \r\n    //  console.log('todo', todo)\r\n    \r\n    return(\r\n        <div>\r\n             <input \r\n                type=\"radio\" \r\n                value={metod.title}\r\n                id={metod.id} \r\n                checked={metod.completed}\r\n                style={styles.input} \r\n                onChange={()=>onChange(metod.id)}\r\n               //onChange={handleChange} \r\n               name=\"metod\" />              \r\n             <label for={metod.id} >{metod.title}</label>\r\n           \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nMetodItem.protoTypes = {\r\n    metod: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\nexport default MetodItem",["49","50"],"C:\\Users\\alyon\\react-app\\src\\context.js",[],"C:\\Users\\alyon\\react-app\\src\\Iconadd.js",["51"],"C:\\Users\\alyon\\react-app\\src\\Metod\\MetodItemIcon.js",["52","53"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Context from \"../context\";\r\nimport { UncontrolledTooltip } from 'reactstrap';\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nconst longText =\r\n  \"MPOT - минимальный размер оплаты труда.Разный для разных регионов.\";\r\nconst shortText = longText;\r\nconst TooltipContent = ({ scheduleUpdate }) => {\r\n  const [text, setText] = useState(shortText);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setText(text === shortText ? longText : shortText);\r\n      scheduleUpdate();\r\n    }, 2000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  });\r\n\r\n  return <>{text}</>;\r\n};\r\n\r\nfunction MetodItem({ metod, index, onChange }) {\r\n  const [iconflag, seticonflag] = useState(true);\r\n\r\n \r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleTooltipClose = () => {\r\n    setOpen(false);\r\n    seticonflag(!iconflag);\r\n  };\r\n\r\n  const handleTooltipOpen = () => {\r\n    setOpen(true);\r\n    seticonflag(!iconflag);\r\n  };\r\n  const styles = {\r\n    input: {\r\n      marginRight: \"1rem\",\r\n    },\r\n  };\r\n\r\n  const { removeTodo } = useContext(Context);\r\n  const classes = [];\r\n\r\n  if (metod.completed) {\r\n    classes.push(\"done\");\r\n  } \r\n\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"radio\"\r\n        value={metod.title}\r\n        id={metod.id}\r\n        checked={metod.completed}\r\n        style={styles.input}\r\n        onChange={() => onChange(metod.id)}\r\n        //onChange={handleChange}\r\n        name=\"metod\"\r\n      />\r\n      <label for={metod.id}>{metod.title}</label>\r\n\r\n        <Icon\r\n          id=\"ScheduleUpdateTooltip\"\r\n          onClick={handleTooltipOpen}\r\n          onClose={handleTooltipClose}\r\n          className=\"materials-icons\"\r\n        >\r\n          {(iconflag)?\"priority_high\":\"clear\"}\r\n        </Icon>\r\n\r\n      <UncontrolledTooltip\r\n        placement=\"bottom\"\r\n        target=\"ScheduleUpdateTooltip\"\r\n        trigger=\"click\"\r\n      >\r\n        {({ scheduleUpdate }) => (\r\n          <TooltipContent scheduleUpdate={scheduleUpdate} />\r\n        )}\r\n      </UncontrolledTooltip>\r\n    </div>\r\n  );\r\n}\r\n\r\nMetodItem.protoTypes = {\r\n  metod: PropTypes.object.isRequired,\r\n  index: PropTypes.number,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default MetodItem;\r\n","C:\\Users\\alyon\\react-app\\src\\MySwitcher.js",[],"C:\\Users\\alyon\\react-app\\src\\input.js",[],{"ruleId":"54","severity":1,"message":"55","line":8,"column":11,"nodeType":"56","messageId":"57","endLine":8,"endColumn":21},{"ruleId":"54","severity":1,"message":"58","line":14,"column":17,"nodeType":"56","messageId":"57","endLine":14,"endColumn":21},{"ruleId":"54","severity":1,"message":"59","line":1,"column":27,"nodeType":"56","messageId":"57","endLine":1,"endColumn":35},{"ruleId":"54","severity":1,"message":"60","line":19,"column":13,"nodeType":"56","messageId":"57","endLine":19,"endColumn":23},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"54","severity":1,"message":"65","line":1,"column":16,"nodeType":"56","messageId":"57","endLine":1,"endColumn":26},{"ruleId":"54","severity":1,"message":"66","line":29,"column":10,"nodeType":"56","messageId":"57","endLine":29,"endColumn":14},{"ruleId":"54","severity":1,"message":"60","line":46,"column":11,"nodeType":"56","messageId":"57","endLine":46,"endColumn":21},"no-unused-vars","'updateData' is assigned a value but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","'useState' is defined but never used.","'removeTodo' is assigned a value but never used.","no-native-reassign",["67"],"no-negated-in-lhs",["68"],"'useContext' is defined but never used.","'open' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]